BASIC QUESTION:
    WHAT:Một web framework sử dụng ngôn ngữ Ruby
    WHEN:
    WHY:
CONFIGURATION:
    Create new app:
		$rails new MySite
			create  README.rdoc
			create  Rakefile
			create  config.ru
			create  .gitignore
			create  Gemfile
			create  app
			create  app/assets/javascripts/application.js
			create  app/assets/stylesheets/application.css
			create  app/controllers/application_controller.rb
			create  app/helpers/application_helper.rb
			create  app/views/layouts/application.html.erb
			create  app/assets/images/.keep
			create  app/mailers/.keep
			create  app/models/.keep
			create  app/controllers/concerns/.keep
			create  app/models/concerns/.keep
			create  bin
			create  bin/bundle
			create  bin/rails
			create  bin/rake
			create  config
			create  config/routes.rb
			create  config/application.rb
			create  config/environment.rb
			create  config/secrets.yml
			create  config/environments
			create  config/environments/development.rb
			create  config/environments/production.rb
			create  config/environments/test.rb
			create  config/initializers
			create  config/initializers/backtrace_silencers.rb
			create  config/initializers/cookies_serializer.rb
			create  config/initializers/filter_parameter_logging.rb
			create  config/initializers/inflections.rb
			create  config/initializers/mime_types.rb
			create  config/initializers/session_store.rb
			create  config/initializers/wrap_parameters.rb
			create  config/locales
			create  config/locales/en.yml
			create  config/boot.rb
			create  config/database.yml
			create  db
			create  db/seeds.rb
			create  lib
			create  lib/tasks
			create  lib/tasks/.keep
			create  lib/assets
			create  lib/assets/.keep
			create  log
			create  log/.keep
			create  public
			create  public/404.html
			create  public/422.html
			create  public/500.html
			create  public/favicon.ico
			create  public/robots.txt
			create  test/fixtures
			create  test/fixtures/.keep
			create  test/controllers
			create  test/controllers/.keep
			create  test/mailers
			create  test/mailers/.keep
			create  test/models
			create  test/models/.keep
			create  test/helpers
			create  test/helpers/.keep
			create  test/integration
			create  test/integration/.keep
			create  test/test_helper.rb
			create  tmp/cache
			create  tmp/cache/assets
			create  vendor/assets/javascripts
			create  vendor/assets/javascripts/.keep
			create  vendor/assets/stylesheets
			create  vendor/assets/stylesheets/.keep
		RUN:
			$ bundle install
		Finally type:
			$ rails server
			check localhost:8000 
		WORK:
			Controller
				What happens when you visit http://localhost:8000 in the browser? Check out the diagram in the browser.

				The browser makes a request for the URL http://localhost:8000.
				The request hits the Rails router in config/routes.rb. The router recognizes the URL and sends the request to the controller.
				The controller receives the request and processes it.
				The controller passes the request to the view.
				The view renders the page as HTML.
				The controller sends the HTML back to the browser for you to see.
USAGE:
    BASIC:
		Controller:
			Create controller:
				rails generate controller Pages
			Controller Action:
				Có 7 action(index, show, new, create, edit, update, destroy
				Để sử dụng 7 action mặc định: 
					resources :messages
				Sử dụng một số method: 
					resources :messages, only: [:index, :show]
				
		Route
			Configure: get 'welcome' => 'pages#home'
		Model:
			rails generate model Message
		Command
			$ rake db:migrate
				Command updates the database with the new messages data model.
			$ rake db:seeds
				Command seeds the database with sample data from db/seeds.rb.
			
    ADVANTAGE
NOTE:

Code:
	class CreateMessages < ActiveRecord::Migration
	  def change
		create_table :messages do |t|
			t.text :content
			t.timestamps
		end
	  end
	end
	2. Open the migration file in db/migrate/. The migration file contains a few things:

	1, The change method tells Rails what change to make to the database. Here it uses the create_table method to create a new table in the database for storing messages.
	2, Inside create_table, we added t.text :content. This will create a text column called content in the messages tables.
	3, The final line t.timestamps is a Rails command that creates two more columns in the messages table called created_at and updated_at. These columns are automatically set when a message is created and updated.
	VD Code view:
		<% @messages.each do |message| %> 
		<div class="message"> 
		  <p class="content"><%= message.content %></p> 
		  <p class="time"><%= message.created_at %></p> 
		</div> 
		<% end %>